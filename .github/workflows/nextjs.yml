# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started

name: Test Workflow

env:
  PNPM_VERSION: "latest"
  NODE_VERSION: "24"
  PACKAGE_MANAGER: "pnpm"
  INSTALL_COMMAND: "install"
  RUNNER: "pnpm"

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # Build job
  build:
    # The os-type of the runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=${{ env.PACKAGE_MANAGER }}"
            echo "command=${{ env.INSTALL_COMMAND }}"
            echo "runner=${{ env.RUNNER }}"
            exit 0
          else
            echo "Unable to determine pnpm package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          # Cache pnpm modules
          # PNPM CI Caching: https://pnpm.io/continuous-integration
          cache: ${{ env.PACKAGE_MANAGER }}
      # For Next.js specific caching

      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
      # - name: Setup Pages
      #   uses: actions/configure-pages@v5
      #   with:
      #     # Automatically inject basePath in your Next.js configuration file and disable
      #     # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
      #     #
      #     # You may remove this line if you want to manage the configuration yourself.
      #     static_site_generator: next

      - name: Install dependencies
        run: ${{ env.PACKAGE_MANAGER }} ${{ env.INSTALL_COMMAND }}

      - name: Build with Next.js
        run: ${{ env.RUNNER }} next build
      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     path: ./out

  # Deployment job
  # deploy:
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v4

  # Deployment job to Vercel
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    steps:
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=$VERCEL_TOKEN

      - name: Build Project Artifacts
        run: vercel build --prod --token=$VERCEL_TOKEN

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN
